{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","totalCounters","sumCounters","className","Counter","this","props","counter","id","onClick","onIncrement","getBadgeClasses","formatCount","onDecrement","children","onDelete","classes","value","count","Component","Counters","onReset","counters","map","title","App","state","handleIncreament","x","idx","indexOf","setState","handleDecrement","handleDelete","counterId","filter","c","handleReset","new_counters","Fragment","length","reduce","total","arg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b9f53d6.chunk.js","sourcesContent":["import React from 'react';\n\n//stateless functional component\n// as navbar do not have any state or props in this\n\n//destructuing Objects\nconst NavBar =({totalCounters, sumCounters}) => {\n        return ( \n            <nav className=\"navbar navbar-light bg-light\">\n                <span className=\"navbar-brand\" >\n                    My Cart \n                <span className=\"badge badge-pill badge-secondary mx-2\"> uniq:{totalCounters}</span>\n                <span className=\"badge badge-pill badge-secondary mx-2\"> sum: {sumCounters}</span>\n                </span>\n            </nav>\n         );\n    \n    }\n    \n\n// const NavBar =(props) => {\n//     return ( \n//         <nav className=\"navbar navbar-light bg-light\">\n//             <span className=\"navbar-brand\" >\n//                 My Cart \n//             <span className=\"badge badge-pill badge-secondary mx-2\"> uniq:{props.totalCounters}</span>\n//             <span className=\"badge badge-pill badge-secondary mx-2\"> sum: {props.sumCounters}</span>\n//             </span>\n//         </nav>\n//      );\n\n// }\n\n// class NavBar extends Component {\n//     render() { \n//         return ( \n//             <nav className=\"navbar navbar-light bg-light\">\n//                 <span className=\"navbar-brand\" >\n//                     My Cart \n//                 <span className=\"badge badge-pill badge-secondary mx-2\"> total:{this.props.totalCounters}</span>\n//                 <span className=\"badge badge-pill badge-secondary mx-2\"> unique: {this.props.sumCounters}</span>\n//                 </span>\n//             </nav>\n//          );\n//     }\n// }\n \nexport default NavBar","import React, { Component } from 'react';\nclass Counter extends Component {\n \n\trender() {\n\t\treturn (\n\t\t\t<div>\n                <span className=\"badge badge-error\">{this.props.counter.id}</span>\n                <button className=\"btn btn-sm btn-primary m-2\" onClick={() => this.props.onIncrement(this.props.counter)}>\n\t\t\t\t\t+\n\t\t\t\t</button>\n\t\t\t\t<span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n\t\t\t\t<button className=\"btn btn-sm btn-secondary m-2\" onClick={() => this.props.onDecrement(this.props.counter)}>\n\t\t\t\t\t-\n\t\t\t\t</button>\n\t\t\t\t{this.props.children}\n\t\t\t\t<button className=\"btn btn-sm btn-danger m-2\" onClick={() =>this.props.onDelete(this.props.counter.id)} >\n\t\t\t\t\tdelete\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n\tgetBadgeClasses() {\n\t\tlet classes = 'badge m-2 badge-light text-';\n\t\tclasses += this.props.counter.value <= 0 ? 'danger' : 'info';\n\t\treturn classes;\n\t}\n\n\tformatCount() {\n\t\tconst { value: count } = this.props.counter;\n\t\t// return count;\n\t\treturn count === 0 ? 'zero' : count;\n\t}\n}\n\nexport default Counter;\n","import React, { Component } from 'react';\nimport Counter from './counter';\n\nclass Counters extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t\n\t\t\t<div>\n\t\t\t\t<button className=\"btn btn-sm btn-info m-2\" onClick={this.props.onReset}>\n\t\t\t\tReset\n\t\t\t\t</button>\n\n\t\t\t\t{this.props.counters.map((counter) => (\n\t\t\t\t\t<Counter \n\t\t\t\t\t\tkey={counter.id} \n\t\t\t\t\t\tcounter={counter}\n\t\t\t\t\t\tonIncrement={this.props.onIncrement} \n\t\t\t\t\t\tonDecrement={this.props.onDecrement}\n\t\t\t\t\t\tonDelete={this.props.onDelete}>\n                    \n\t\t\t\t\t   <span className=\"badge badge-warning\">{counter.title}</span>\n\t\t\t\t\t\n                    </Counter>\n\t\t\t\t))}\n\t\t\t</div>  \n\t\t);\n\t}\n}\n\nexport default Counters;\n","// import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport NavBar from './components/navbar'\nimport Counters from './components/counters'\nimport './App.css';\n\n\nclass App extends Component {\n\tstate = {\n\t\tcounters: [ { id: 1, value: 2, title:\"a\" }, \n        { id: 2, value: 4, title:\"b1212\" }, \n        { id: 3, value: 6, title:\"c234234234\" }, \n        { id: 4, value: 8, title:\"ddsfsdf23\" } ]\n\t};\n\n\thandleIncreament=(counter)=> {\n\t\tconst x = [...this.state.counters];\n\t\tconst idx = x.indexOf(counter)\n\t\tx[idx] = {...counter};\n\t\tx[idx].value++;\n\t\tthis.setState({counters:x})\n\t}\n\n\thandleDecrement=(counter)=> {\n\t\tconst x = [...this.state.counters];\n\t\tconst idx = x.indexOf(counter)\n\t\tx[idx] = {...counter};\n\t\tx[idx].value--;\n\t\tif (x[idx].value<0) {\n\t\t\tx[idx].value=0\n\t\t}\n\t\tthis.setState({counters:x})\n\t}\n\n\thandleDelete=(counterId)=>{\n\t\t// console.log(\"delete row\", counterId);\n\t\tconst x=this.state.counters.filter(c => c.id !== counterId);\n\t\tthis.setState({counters:x})\n\t}\n\n\thandleReset =() => {\n\t\t// console.log(\"reset\");\n\t\tconst new_counters = this.state.counters.map(c=>{c.value=0; return c})\n\t\tthis.setState({counters:new_counters})\n\t}\n\n  render() {\n    return (    \n      <React.Fragment>\n        <NavBar \n          totalCounters={this.state.counters.filter(c => c.value >0).length} \n          sumCounters={this.state.counters.map(c=>c.value).reduce((total, arg) => total + arg, 0)}\n        />\n        <main className=\"container\">\n          <Counters \t\t\t\t\t\t\n            counters= {this.state.counters}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncreament} \n\t\t\t\t\t\tonDecrement={this.handleDecrement}\n\t\t\t\t\t\tonDelete={this.handleDelete}\n          />\n        </main> \n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}